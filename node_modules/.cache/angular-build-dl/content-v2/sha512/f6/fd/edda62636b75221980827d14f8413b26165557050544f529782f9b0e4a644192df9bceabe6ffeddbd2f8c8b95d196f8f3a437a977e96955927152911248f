{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","queryString","parsePath","undefined","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","removeQueryString","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","Promise","resolve","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","beforeLeave","beforeEnter","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","onRoutesChanged","onRedirectChanged","bind","historyDirection","getPath","runGuards","canProceed","writeNavStateRoot","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","setPath","waitPromise","warn","safeWriteNavState","win","title","redirectFrom","lock","unlock","p","toChain","fromChain","beforeEnterHook","beforeLeaveHook","canLeave","canEnter","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","color","style"],"mappings":"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","file":"29-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-92848855.js';\r\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\r\nimport { e as debounce } from './helpers-5c745fbd.js';\r\nimport { o as openURL, c as createColorClasses } from './theme-5641d27f.js';\r\n\r\nconst Route = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\r\n        /**\r\n         * Relative path that needs to match in order for this route to apply.\r\n         *\r\n         * Accepts paths similar to expressjs so that you can define parameters\r\n         * in the url /foo/:bar where bar would be available in incoming props.\r\n         */\r\n        this.url = '';\r\n    }\r\n    onUpdate(newValue) {\r\n        this.ionRouteDataChanged.emit(newValue);\r\n    }\r\n    onComponentProps(newValue, oldValue) {\r\n        if (newValue === oldValue) {\r\n            return;\r\n        }\r\n        const keys1 = newValue ? Object.keys(newValue) : [];\r\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\r\n        if (keys1.length !== keys2.length) {\r\n            this.onUpdate(newValue);\r\n            return;\r\n        }\r\n        for (const key of keys1) {\r\n            if (newValue[key] !== oldValue[key]) {\r\n                this.onUpdate(newValue);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this.ionRouteDataChanged.emit();\r\n    }\r\n    static get watchers() { return {\r\n        \"url\": [\"onUpdate\"],\r\n        \"component\": [\"onUpdate\"],\r\n        \"componentProps\": [\"onComponentProps\"]\r\n    }; }\r\n};\r\n\r\nconst RouteRedirect = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\r\n    }\r\n    propDidChange() {\r\n        this.ionRouteRedirectChanged.emit();\r\n    }\r\n    connectedCallback() {\r\n        this.ionRouteRedirectChanged.emit();\r\n    }\r\n    static get watchers() { return {\r\n        \"from\": [\"propDidChange\"],\r\n        \"to\": [\"propDidChange\"]\r\n    }; }\r\n};\r\n\r\nconst ROUTER_INTENT_NONE = 'root';\r\nconst ROUTER_INTENT_FORWARD = 'forward';\r\nconst ROUTER_INTENT_BACK = 'back';\r\n\r\nconst generatePath = (segments) => {\r\n    const path = segments\r\n        .filter(s => s.length > 0)\r\n        .join('/');\r\n    return '/' + path;\r\n};\r\nconst chainToPath = (chain) => {\r\n    const path = [];\r\n    for (const route of chain) {\r\n        for (const segment of route.path) {\r\n            if (segment[0] === ':') {\r\n                const param = route.params && route.params[segment.slice(1)];\r\n                if (!param) {\r\n                    return null;\r\n                }\r\n                path.push(param);\r\n            }\r\n            else if (segment !== '') {\r\n                path.push(segment);\r\n            }\r\n        }\r\n    }\r\n    return path;\r\n};\r\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\r\n    let url = generatePath([\r\n        ...parsePath(root),\r\n        ...path\r\n    ]);\r\n    if (useHash) {\r\n        url = '#' + url;\r\n    }\r\n    if (queryString !== undefined) {\r\n        url = url + '?' + queryString;\r\n    }\r\n    if (direction === ROUTER_INTENT_FORWARD) {\r\n        history.pushState(state, '', url);\r\n    }\r\n    else {\r\n        history.replaceState(state, '', url);\r\n    }\r\n};\r\nconst removePrefix = (prefix, path) => {\r\n    if (prefix.length > path.length) {\r\n        return null;\r\n    }\r\n    if (prefix.length <= 1 && prefix[0] === '') {\r\n        return path;\r\n    }\r\n    for (let i = 0; i < prefix.length; i++) {\r\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\r\n            return null;\r\n        }\r\n    }\r\n    if (path.length === prefix.length) {\r\n        return [''];\r\n    }\r\n    return path.slice(prefix.length);\r\n};\r\nconst readPath = (loc, root, useHash) => {\r\n    let pathname = loc.pathname;\r\n    if (useHash) {\r\n        const hash = loc.hash;\r\n        pathname = (hash[0] === '#')\r\n            ? hash.slice(1)\r\n            : '';\r\n    }\r\n    const prefix = parsePath(root);\r\n    const path = parsePath(pathname);\r\n    return removePrefix(prefix, path);\r\n};\r\nconst parsePath = (path) => {\r\n    if (path == null) {\r\n        return [''];\r\n    }\r\n    const removeQueryString = path.split('?')[0];\r\n    const segments = removeQueryString.split('/')\r\n        .map(s => s.trim())\r\n        .filter(s => s.length > 0);\r\n    if (segments.length === 0) {\r\n        return [''];\r\n    }\r\n    else {\r\n        return segments;\r\n    }\r\n};\r\n\r\nconst printRoutes = (routes) => {\r\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\r\n    for (const chain of routes) {\r\n        const path = [];\r\n        chain.forEach(r => path.push(...r.path));\r\n        const ids = chain.map(r => r.id);\r\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\r\n    }\r\n    console.groupEnd();\r\n};\r\nconst printRedirects = (redirects) => {\r\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\r\n    for (const redirect of redirects) {\r\n        if (redirect.to) {\r\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\r\n        }\r\n    }\r\n    console.groupEnd();\r\n};\r\n\r\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\r\n    try {\r\n        // find next navigation outlet in the DOM\r\n        const outlet = searchNavNode(root);\r\n        // make sure we can continue interacting the DOM, otherwise abort\r\n        if (index >= chain.length || !outlet) {\r\n            return changed;\r\n        }\r\n        await outlet.componentOnReady();\r\n        const route = chain[index];\r\n        const result = await outlet.setRouteId(route.id, route.params, direction, animation);\r\n        // if the outlet changed the page, reset navigation to neutral (no direction)\r\n        // this means nested outlets will not animate\r\n        if (result.changed) {\r\n            direction = ROUTER_INTENT_NONE;\r\n            changed = true;\r\n        }\r\n        // recursively set nested outlets\r\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\r\n        // once all nested outlets are visible let's make the parent visible too,\r\n        // using markVisible prevents flickering\r\n        if (result.markVisible) {\r\n            await result.markVisible();\r\n        }\r\n        return changed;\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nconst readNavState = async (root) => {\r\n    const ids = [];\r\n    let outlet;\r\n    let node = root;\r\n    // tslint:disable-next-line:no-constant-condition\r\n    while (true) {\r\n        outlet = searchNavNode(node);\r\n        if (outlet) {\r\n            const id = await outlet.getRouteId();\r\n            if (id) {\r\n                node = id.element;\r\n                id.element = undefined;\r\n                ids.push(id);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return { ids, outlet };\r\n};\r\nconst waitUntilNavNode = () => {\r\n    if (searchNavNode(document.body)) {\r\n        return Promise.resolve();\r\n    }\r\n    return new Promise(resolve => {\r\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\r\n    });\r\n};\r\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\r\nconst searchNavNode = (root) => {\r\n    if (!root) {\r\n        return undefined;\r\n    }\r\n    if (root.matches(QUERY)) {\r\n        return root;\r\n    }\r\n    const outlet = root.querySelector(QUERY);\r\n    return outlet ? outlet : undefined;\r\n};\r\n\r\nconst matchesRedirect = (input, route) => {\r\n    const { from, to } = route;\r\n    if (to === undefined) {\r\n        return false;\r\n    }\r\n    if (from.length > input.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < from.length; i++) {\r\n        const expected = from[i];\r\n        if (expected === '*') {\r\n            return true;\r\n        }\r\n        if (expected !== input[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return from.length === input.length;\r\n};\r\nconst routeRedirect = (path, routes) => {\r\n    return routes.find(route => matchesRedirect(path, route));\r\n};\r\nconst matchesIDs = (ids, chain) => {\r\n    const len = Math.min(ids.length, chain.length);\r\n    let i = 0;\r\n    for (; i < len; i++) {\r\n        if (ids[i].toLowerCase() !== chain[i].id) {\r\n            break;\r\n        }\r\n    }\r\n    return i;\r\n};\r\nconst matchesPath = (inputPath, chain) => {\r\n    const segments = new RouterSegments(inputPath);\r\n    let matchesDefault = false;\r\n    let allparams;\r\n    for (let i = 0; i < chain.length; i++) {\r\n        const path = chain[i].path;\r\n        if (path[0] === '') {\r\n            matchesDefault = true;\r\n        }\r\n        else {\r\n            for (const segment of path) {\r\n                const data = segments.next();\r\n                // data param\r\n                if (segment[0] === ':') {\r\n                    if (data === '') {\r\n                        return null;\r\n                    }\r\n                    allparams = allparams || [];\r\n                    const params = allparams[i] || (allparams[i] = {});\r\n                    params[segment.slice(1)] = data;\r\n                }\r\n                else if (data !== segment) {\r\n                    return null;\r\n                }\r\n            }\r\n            matchesDefault = false;\r\n        }\r\n    }\r\n    const matches = (matchesDefault)\r\n        ? matchesDefault === (segments.next() === '')\r\n        : true;\r\n    if (!matches) {\r\n        return null;\r\n    }\r\n    if (allparams) {\r\n        return chain.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, allparams[i])\r\n        }));\r\n    }\r\n    return chain;\r\n};\r\nconst mergeParams = (a, b) => {\r\n    if (!a && b) {\r\n        return b;\r\n    }\r\n    else if (a && !b) {\r\n        return a;\r\n    }\r\n    else if (a && b) {\r\n        return Object.assign(Object.assign({}, a), b);\r\n    }\r\n    return undefined;\r\n};\r\nconst routerIDsToChain = (ids, chains) => {\r\n    let match = null;\r\n    let maxMatches = 0;\r\n    const plainIDs = ids.map(i => i.id);\r\n    for (const chain of chains) {\r\n        const score = matchesIDs(plainIDs, chain);\r\n        if (score > maxMatches) {\r\n            match = chain;\r\n            maxMatches = score;\r\n        }\r\n    }\r\n    if (match) {\r\n        return match.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, ids[i] && ids[i].params)\r\n        }));\r\n    }\r\n    return null;\r\n};\r\nconst routerPathToChain = (path, chains) => {\r\n    let match = null;\r\n    let matches = 0;\r\n    for (const chain of chains) {\r\n        const matchedChain = matchesPath(path, chain);\r\n        if (matchedChain !== null) {\r\n            const score = computePriority(matchedChain);\r\n            if (score > matches) {\r\n                matches = score;\r\n                match = matchedChain;\r\n            }\r\n        }\r\n    }\r\n    return match;\r\n};\r\nconst computePriority = (chain) => {\r\n    let score = 1;\r\n    let level = 1;\r\n    for (const route of chain) {\r\n        for (const path of route.path) {\r\n            if (path[0] === ':') {\r\n                score += Math.pow(1, level);\r\n            }\r\n            else if (path !== '') {\r\n                score += Math.pow(2, level);\r\n            }\r\n            level++;\r\n        }\r\n    }\r\n    return score;\r\n};\r\nclass RouterSegments {\r\n    constructor(path) {\r\n        this.path = path.slice();\r\n    }\r\n    next() {\r\n        if (this.path.length > 0) {\r\n            return this.path.shift();\r\n        }\r\n        return '';\r\n    }\r\n}\r\n\r\nconst readRedirects = (root) => {\r\n    return Array.from(root.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\r\n        .map(el => {\r\n        const to = readProp(el, 'to');\r\n        return {\r\n            from: parsePath(readProp(el, 'from')),\r\n            to: to == null ? undefined : parsePath(to),\r\n        };\r\n    });\r\n};\r\nconst readRoutes = (root) => {\r\n    return flattenRouterTree(readRouteNodes(root));\r\n};\r\nconst readRouteNodes = (root, node = root) => {\r\n    return Array.from(node.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\r\n        .map(el => {\r\n        const component = readProp(el, 'component');\r\n        if (component == null) {\r\n            throw new Error('component missing in ion-route');\r\n        }\r\n        return {\r\n            path: parsePath(readProp(el, 'url')),\r\n            id: component.toLowerCase(),\r\n            params: el.componentProps,\r\n            beforeLeave: el.beforeLeave,\r\n            beforeEnter: el.beforeEnter,\r\n            children: readRouteNodes(root, el)\r\n        };\r\n    });\r\n};\r\nconst readProp = (el, prop) => {\r\n    if (prop in el) {\r\n        return el[prop];\r\n    }\r\n    if (el.hasAttribute(prop)) {\r\n        return el.getAttribute(prop);\r\n    }\r\n    return null;\r\n};\r\nconst flattenRouterTree = (nodes) => {\r\n    const routes = [];\r\n    for (const node of nodes) {\r\n        flattenNode([], routes, node);\r\n    }\r\n    return routes;\r\n};\r\nconst flattenNode = (chain, routes, node) => {\r\n    const s = chain.slice();\r\n    s.push({\r\n        id: node.id,\r\n        path: node.path,\r\n        params: node.params,\r\n        beforeLeave: node.beforeLeave,\r\n        beforeEnter: node.beforeEnter\r\n    });\r\n    if (node.children.length === 0) {\r\n        routes.push(s);\r\n        return;\r\n    }\r\n    for (const sub of node.children) {\r\n        flattenNode(s, routes, sub);\r\n    }\r\n};\r\n\r\nconst Router = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\r\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\r\n        this.previousPath = null;\r\n        this.busy = false;\r\n        this.state = 0;\r\n        this.lastState = 0;\r\n        /**\r\n         * By default `ion-router` will match the routes at the root path (\"/\").\r\n         * That can be changed when\r\n         *\r\n         */\r\n        this.root = '/';\r\n        /**\r\n         * The router can work in two \"modes\":\r\n         * - With hash: `/index.html#/path/to/page`\r\n         * - Without hash: `/path/to/page`\r\n         *\r\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\r\n         *\r\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\r\n         * requires additional server-side configuration in order to properly work.\r\n         *\r\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\r\n         *\r\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\r\n         */\r\n        this.useHash = true;\r\n    }\r\n    async componentWillLoad() {\r\n        console.debug('[ion-router] router will load');\r\n        await waitUntilNavNode();\r\n        console.debug('[ion-router] found nav');\r\n        await this.onRoutesChanged();\r\n    }\r\n    componentDidLoad() {\r\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\r\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\r\n    }\r\n    async onPopState() {\r\n        const direction = this.historyDirection();\r\n        let path = this.getPath();\r\n        const canProceed = await this.runGuards(path);\r\n        if (canProceed !== true) {\r\n            if (typeof canProceed === 'object') {\r\n                path = parsePath(canProceed.redirect);\r\n            }\r\n            return false;\r\n        }\r\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\r\n        return this.writeNavStateRoot(path, direction);\r\n    }\r\n    onBackButton(ev) {\r\n        ev.detail.register(0, processNextHandler => {\r\n            this.back();\r\n            processNextHandler();\r\n        });\r\n    }\r\n    /** @internal */\r\n    async canTransition() {\r\n        const canProceed = await this.runGuards();\r\n        if (canProceed !== true) {\r\n            if (typeof canProceed === 'object') {\r\n                return canProceed.redirect;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Navigate to the specified URL.\r\n     *\r\n     * @param url The url to navigate to.\r\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\r\n     */\r\n    async push(url, direction = 'forward', animation) {\r\n        if (url.startsWith('.')) {\r\n            url = (new URL(url, window.location.href)).pathname;\r\n        }\r\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\r\n        let path = parsePath(url);\r\n        let queryString = url.split('?')[1];\r\n        const canProceed = await this.runGuards(path);\r\n        if (canProceed !== true) {\r\n            if (typeof canProceed === 'object') {\r\n                path = parsePath(canProceed.redirect);\r\n                queryString = canProceed.redirect.split('?')[1];\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        this.setPath(path, direction, queryString);\r\n        return this.writeNavStateRoot(path, direction, animation);\r\n    }\r\n    /**\r\n     * Go back to previous page in the window.history.\r\n     */\r\n    back() {\r\n        window.history.back();\r\n        return Promise.resolve(this.waitPromise);\r\n    }\r\n    /** @internal */\r\n    async printDebug() {\r\n        console.debug('CURRENT PATH', this.getPath());\r\n        console.debug('PREVIOUS PATH', this.previousPath);\r\n        printRoutes(readRoutes(this.el));\r\n        printRedirects(readRedirects(this.el));\r\n    }\r\n    /** @internal */\r\n    async navChanged(direction) {\r\n        if (this.busy) {\r\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\r\n            return false;\r\n        }\r\n        const { ids, outlet } = await readNavState(window.document.body);\r\n        const routes = readRoutes(this.el);\r\n        const chain = routerIDsToChain(ids, routes);\r\n        if (!chain) {\r\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\r\n            return false;\r\n        }\r\n        const path = chainToPath(chain);\r\n        if (!path) {\r\n            console.warn('[ion-router] router could not match path because some required param is missing');\r\n            return false;\r\n        }\r\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\r\n        this.setPath(path, direction);\r\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\r\n        return true;\r\n    }\r\n    onRedirectChanged() {\r\n        const path = this.getPath();\r\n        if (path && routeRedirect(path, readRedirects(this.el))) {\r\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\r\n        }\r\n    }\r\n    onRoutesChanged() {\r\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\r\n    }\r\n    historyDirection() {\r\n        const win = window;\r\n        if (win.history.state === null) {\r\n            this.state++;\r\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\r\n        }\r\n        const state = win.history.state;\r\n        const lastState = this.lastState;\r\n        this.lastState = state;\r\n        if (state > lastState || (state >= lastState && lastState > 0)) {\r\n            return ROUTER_INTENT_FORWARD;\r\n        }\r\n        else if (state < lastState) {\r\n            return ROUTER_INTENT_BACK;\r\n        }\r\n        else {\r\n            return ROUTER_INTENT_NONE;\r\n        }\r\n    }\r\n    async writeNavStateRoot(path, direction, animation) {\r\n        if (!path) {\r\n            console.error('[ion-router] URL is not part of the routing set');\r\n            return false;\r\n        }\r\n        // lookup redirect rule\r\n        const redirects = readRedirects(this.el);\r\n        const redirect = routeRedirect(path, redirects);\r\n        let redirectFrom = null;\r\n        if (redirect) {\r\n            this.setPath(redirect.to, direction);\r\n            redirectFrom = redirect.from;\r\n            path = redirect.to;\r\n        }\r\n        // lookup route chain\r\n        const routes = readRoutes(this.el);\r\n        const chain = routerPathToChain(path, routes);\r\n        if (!chain) {\r\n            console.error('[ion-router] the path does not match any route');\r\n            return false;\r\n        }\r\n        // write DOM give\r\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\r\n    }\r\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\r\n        const unlock = await this.lock();\r\n        let changed = false;\r\n        try {\r\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n        unlock();\r\n        return changed;\r\n    }\r\n    async lock() {\r\n        const p = this.waitPromise;\r\n        let resolve;\r\n        this.waitPromise = new Promise(r => resolve = r);\r\n        if (p !== undefined) {\r\n            await p;\r\n        }\r\n        return resolve;\r\n    }\r\n    async runGuards(to = this.getPath(), from = parsePath(this.previousPath)) {\r\n        if (!to || !from) {\r\n            return true;\r\n        }\r\n        const routes = readRoutes(this.el);\r\n        const toChain = routerPathToChain(to, routes);\r\n        const fromChain = routerPathToChain(from, routes);\r\n        const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\r\n        const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\r\n        const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\r\n        if (canLeave === false || typeof canLeave === 'object') {\r\n            return canLeave;\r\n        }\r\n        const canEnter = beforeEnterHook ? await beforeEnterHook() : true;\r\n        if (canEnter === false || typeof canEnter === 'object') {\r\n            return canEnter;\r\n        }\r\n        return true;\r\n    }\r\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\r\n        if (this.busy) {\r\n            console.warn('[ion-router] router is busy, transition was cancelled');\r\n            return false;\r\n        }\r\n        this.busy = true;\r\n        // generate route event and emit will change\r\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\r\n        if (routeEvent) {\r\n            this.ionRouteWillChange.emit(routeEvent);\r\n        }\r\n        const changed = await writeNavState(node, chain, direction, index, false, animation);\r\n        this.busy = false;\r\n        if (changed) {\r\n            console.debug('[ion-router] route changed', path);\r\n        }\r\n        // emit did change\r\n        if (routeEvent) {\r\n            this.ionRouteDidChange.emit(routeEvent);\r\n        }\r\n        return changed;\r\n    }\r\n    setPath(path, direction, queryString) {\r\n        this.state++;\r\n        writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\r\n    }\r\n    getPath() {\r\n        return readPath(window.location, this.root, this.useHash);\r\n    }\r\n    routeChangeEvent(path, redirectFromPath) {\r\n        const from = this.previousPath;\r\n        const to = generatePath(path);\r\n        this.previousPath = to;\r\n        if (to === from) {\r\n            return null;\r\n        }\r\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\r\n        return {\r\n            from,\r\n            redirectedFrom,\r\n            to,\r\n        };\r\n    }\r\n    get el() { return getElement(this); }\r\n};\r\n\r\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\r\n\r\nconst RouterLink = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * When using a router, it specifies the transition direction when navigating to\r\n         * another page using `href`.\r\n         */\r\n        this.routerDirection = 'forward';\r\n        this.onClick = (ev) => {\r\n            openURL(this.href, ev, this.routerDirection, this.routerAnimation);\r\n        };\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        const attrs = {\r\n            href: this.href,\r\n            rel: this.rel,\r\n            target: this.target\r\n        };\r\n        return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\r\n                [mode]: true,\r\n                'ion-activatable': true\r\n            }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\r\n    }\r\n};\r\nRouterLink.style = routerLinkCss;\r\n\r\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\r\n"]}