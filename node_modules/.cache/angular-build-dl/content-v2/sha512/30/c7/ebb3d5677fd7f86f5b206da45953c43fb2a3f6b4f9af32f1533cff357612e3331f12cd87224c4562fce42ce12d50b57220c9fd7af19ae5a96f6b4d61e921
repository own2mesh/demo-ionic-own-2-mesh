{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-textarea.entry.js"],"names":["textareaIosCss","textareaMdCss","Textarea","hostRef","ionChange","ionInput","ionStyle","ionBlur","ionFocus","inputId","textareaIds","didBlurAfterEdit","fireFocusEvents","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","emit","onFocus","focusChange","onBlur","onKeyDown","checkClearOnEdit","getValue","runAutoGrow","debounceChanged","document","dispatchEvent","CustomEvent","detail","el","style","height","scrollHeight","textareaWrapper","focus","blur","Promise","resolve","placeholder","hasValue","mode","labelId","label","id","color","ref","autoCapitalize","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","maxLength","maxlength","minLength","minlength","readOnly","cols","rows","wrap","ios","md"],"mappings":"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","file":"39-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, f as readTask, h, H as Host, i as getElement } from './index-92848855.js';\r\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\r\nimport { d as debounceEvent, r as raf, f as findItemLabel } from './helpers-5c745fbd.js';\r\nimport { c as createColorClasses } from './theme-5641d27f.js';\r\n\r\nconst textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-ios{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\r\n\r\nconst textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-md{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\r\n\r\nconst Textarea = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionInput = createEvent(this, \"ionInput\", 7);\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n        this.inputId = `ion-textarea-${textareaIds++}`;\r\n        this.didBlurAfterEdit = false;\r\n        /**\r\n         * This is required for a WebKit bug which requires us to\r\n         * blur and focus an input to properly focus the input in\r\n         * an item with delegatesFocus. It will no longer be needed\r\n         * with iOS 14.\r\n         *\r\n         * @internal\r\n         */\r\n        this.fireFocusEvents = true;\r\n        this.hasFocus = false;\r\n        /**\r\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n         */\r\n        this.autocapitalize = 'none';\r\n        /**\r\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n         */\r\n        this.autofocus = false;\r\n        /**\r\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\r\n         */\r\n        this.clearOnEdit = false;\r\n        /**\r\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\r\n         */\r\n        this.debounce = 0;\r\n        /**\r\n         * If `true`, the user cannot interact with the textarea.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the user cannot modify the value.\r\n         */\r\n        this.readonly = false;\r\n        /**\r\n         * If `true`, the user must fill in a value before submitting a form.\r\n         */\r\n        this.required = false;\r\n        /**\r\n         * If `true`, the element will have its spelling and grammar checked.\r\n         */\r\n        this.spellcheck = false;\r\n        /**\r\n         * If `true`, the element height will increase based on the value.\r\n         */\r\n        this.autoGrow = false;\r\n        /**\r\n         * The value of the textarea.\r\n         */\r\n        this.value = '';\r\n        this.onInput = (ev) => {\r\n            if (this.nativeInput) {\r\n                this.value = this.nativeInput.value;\r\n            }\r\n            this.emitStyle();\r\n            this.ionInput.emit(ev);\r\n        };\r\n        this.onFocus = (ev) => {\r\n            this.hasFocus = true;\r\n            this.focusChange();\r\n            if (this.fireFocusEvents) {\r\n                this.ionFocus.emit(ev);\r\n            }\r\n        };\r\n        this.onBlur = (ev) => {\r\n            this.hasFocus = false;\r\n            this.focusChange();\r\n            if (this.fireFocusEvents) {\r\n                this.ionBlur.emit(ev);\r\n            }\r\n        };\r\n        this.onKeyDown = () => {\r\n            this.checkClearOnEdit();\r\n        };\r\n    }\r\n    debounceChanged() {\r\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n    }\r\n    disabledChanged() {\r\n        this.emitStyle();\r\n    }\r\n    /**\r\n     * Update the native input element when the value changes\r\n     */\r\n    valueChanged() {\r\n        const nativeInput = this.nativeInput;\r\n        const value = this.getValue();\r\n        if (nativeInput && nativeInput.value !== value) {\r\n            nativeInput.value = value;\r\n        }\r\n        this.runAutoGrow();\r\n        this.emitStyle();\r\n        this.ionChange.emit({ value });\r\n    }\r\n    connectedCallback() {\r\n        this.emitStyle();\r\n        this.debounceChanged();\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    }\r\n    componentDidLoad() {\r\n        raf(() => this.runAutoGrow());\r\n    }\r\n    runAutoGrow() {\r\n        const nativeInput = this.nativeInput;\r\n        if (nativeInput && this.autoGrow) {\r\n            readTask(() => {\r\n                nativeInput.style.height = 'auto';\r\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\r\n                if (this.textareaWrapper) {\r\n                    this.textareaWrapper.style.height = nativeInput.scrollHeight + 'px';\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets focus on the native `textarea` in `ion-textarea`. Use this method instead of the global\r\n     * `textarea.focus()`.\r\n     */\r\n    async setFocus() {\r\n        if (this.nativeInput) {\r\n            this.nativeInput.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Sets blur on the native `textarea` in `ion-textarea`. Use this method instead of the global\r\n     * `textarea.blur()`.\r\n     * @internal\r\n     */\r\n    async setBlur() {\r\n        if (this.nativeInput) {\r\n            this.nativeInput.blur();\r\n        }\r\n    }\r\n    /**\r\n     * Returns the native `<textarea>` element used under the hood.\r\n     */\r\n    getInputElement() {\r\n        return Promise.resolve(this.nativeInput);\r\n    }\r\n    emitStyle() {\r\n        this.ionStyle.emit({\r\n            'interactive': true,\r\n            'textarea': true,\r\n            'input': true,\r\n            'interactive-disabled': this.disabled,\r\n            'has-placeholder': this.placeholder != null,\r\n            'has-value': this.hasValue(),\r\n            'has-focus': this.hasFocus\r\n        });\r\n    }\r\n    /**\r\n     * Check if we need to clear the text input if clearOnEdit is enabled\r\n     */\r\n    checkClearOnEdit() {\r\n        if (!this.clearOnEdit) {\r\n            return;\r\n        }\r\n        // Did the input value change after it was blurred and edited?\r\n        if (this.didBlurAfterEdit && this.hasValue()) {\r\n            // Clear the input\r\n            this.value = '';\r\n        }\r\n        // Reset the flag\r\n        this.didBlurAfterEdit = false;\r\n    }\r\n    focusChange() {\r\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\r\n            this.didBlurAfterEdit = true;\r\n        }\r\n        this.emitStyle();\r\n    }\r\n    hasValue() {\r\n        return this.getValue() !== '';\r\n    }\r\n    getValue() {\r\n        return this.value || '';\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        const value = this.getValue();\r\n        const labelId = this.inputId + '-lbl';\r\n        const label = findItemLabel(this.el);\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\r\n                [mode]: true,\r\n            }) }, h(\"div\", { class: \"textarea-wrapper\", ref: el => this.textareaWrapper = el }, h(\"textarea\", { class: \"native-textarea\", \"aria-labelledby\": labelId, ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value))));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"debounce\": [\"debounceChanged\"],\r\n        \"disabled\": [\"disabledChanged\"],\r\n        \"value\": [\"valueChanged\"]\r\n    }; }\r\n};\r\nlet textareaIds = 0;\r\nTextarea.style = {\r\n    ios: textareaIosCss,\r\n    md: textareaMdCss\r\n};\r\n\r\nexport { Textarea as ion_textarea };\r\n"]}