{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-col_3.entry.js"],"names":["SIZE_TO_MEDIA","matchBreakpoint","breakpoint","undefined","window","matchMedia","mediaQuery","matches","colCss","win","SUPPORTS_VARS","CSS","supports","BREAKPOINTS","Col","hostRef","property","matched","columns","charAt","toUpperCase","slice","getColumns","colSize","modifier","amount","isRTL","calculatePosition","document","dir","mode","style","Object","assign","calculateOffset","calculatePull","calculatePush","calculateSize","gridCss","Grid","fixed","rowCss","Row"],"mappings":"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","file":"10-es5.js","sourcesContent":["import { r as registerInstance, j as forceUpdate, h, H as Host } from './index-92848855.js';\r\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\r\n\r\nconst SIZE_TO_MEDIA = {\r\n    'xs': '(min-width: 0px)',\r\n    'sm': '(min-width: 576px)',\r\n    'md': '(min-width: 768px)',\r\n    'lg': '(min-width: 992px)',\r\n    'xl': '(min-width: 1200px)',\r\n};\r\n// Check if the window matches the media query\r\n// at the breakpoint passed\r\n// e.g. matchBreakpoint('sm') => true if screen width exceeds 576px\r\nconst matchBreakpoint = (breakpoint) => {\r\n    if (breakpoint === undefined || breakpoint === '') {\r\n        return true;\r\n    }\r\n    if (window.matchMedia) {\r\n        const mediaQuery = SIZE_TO_MEDIA[breakpoint];\r\n        return window.matchMedia(mediaQuery).matches;\r\n    }\r\n    return false;\r\n};\r\n\r\nconst colCss = \":host{padding-left:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;width:100%;max-width:100%;min-height:1px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px))}}@media (min-width: 576px){:host{padding-left:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 768px){:host{padding-left:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 992px){:host{padding-left:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 1200px){:host{padding-left:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px))}}}\";\r\n\r\nconst win = window;\r\nconst SUPPORTS_VARS = !!(win.CSS && win.CSS.supports && win.CSS.supports('--a: 0'));\r\nconst BREAKPOINTS = ['', 'xs', 'sm', 'md', 'lg', 'xl'];\r\nconst Col = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    onResize() {\r\n        forceUpdate(this);\r\n    }\r\n    // Loop through all of the breakpoints to see if the media query\r\n    // matches and grab the column value from the relevant prop if so\r\n    getColumns(property) {\r\n        let matched;\r\n        for (const breakpoint of BREAKPOINTS) {\r\n            const matches = matchBreakpoint(breakpoint);\r\n            // Grab the value of the property, if it exists and our\r\n            // media query matches we return the value\r\n            const columns = this[property + breakpoint.charAt(0).toUpperCase() + breakpoint.slice(1)];\r\n            if (matches && columns !== undefined) {\r\n                matched = columns;\r\n            }\r\n        }\r\n        // Return the last matched columns since the breakpoints\r\n        // increase in size and we want to return the largest match\r\n        return matched;\r\n    }\r\n    calculateSize() {\r\n        const columns = this.getColumns('size');\r\n        // If size wasn't set for any breakpoint\r\n        // or if the user set the size without a value\r\n        // it means we need to stick with the default and return\r\n        // e.g. <ion-col size-md>\r\n        if (!columns || columns === '') {\r\n            return;\r\n        }\r\n        // If the size is set to auto then don't calculate a size\r\n        const colSize = (columns === 'auto')\r\n            ? 'auto'\r\n            // If CSS supports variables we should use the grid columns var\r\n            : SUPPORTS_VARS ? `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\r\n                // Convert the columns to a percentage by dividing by the total number\r\n                // of columns (12) and then multiplying by 100\r\n                : ((columns / 12) * 100) + '%';\r\n        return {\r\n            'flex': `0 0 ${colSize}`,\r\n            'width': `${colSize}`,\r\n            'max-width': `${colSize}`\r\n        };\r\n    }\r\n    // Called by push, pull, and offset since they use the same calculations\r\n    calculatePosition(property, modifier) {\r\n        const columns = this.getColumns(property);\r\n        if (!columns) {\r\n            return;\r\n        }\r\n        // If the number of columns passed are greater than 0 and less than\r\n        // 12 we can position the column, else default to auto\r\n        const amount = SUPPORTS_VARS\r\n            // If CSS supports variables we should use the grid columns var\r\n            ? `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\r\n            // Convert the columns to a percentage by dividing by the total number\r\n            // of columns (12) and then multiplying by 100\r\n            : (columns > 0 && columns < 12) ? (columns / 12 * 100) + '%' : 'auto';\r\n        return {\r\n            [modifier]: amount\r\n        };\r\n    }\r\n    calculateOffset(isRTL) {\r\n        return this.calculatePosition('offset', isRTL ? 'margin-right' : 'margin-left');\r\n    }\r\n    calculatePull(isRTL) {\r\n        return this.calculatePosition('pull', isRTL ? 'left' : 'right');\r\n    }\r\n    calculatePush(isRTL) {\r\n        return this.calculatePosition('push', isRTL ? 'right' : 'left');\r\n    }\r\n    render() {\r\n        const isRTL = document.dir === 'rtl';\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { class: {\r\n                [mode]: true\r\n            }, style: Object.assign(Object.assign(Object.assign(Object.assign({}, this.calculateOffset(isRTL)), this.calculatePull(isRTL)), this.calculatePush(isRTL)), this.calculateSize()) }, h(\"slot\", null)));\r\n    }\r\n};\r\nCol.style = colCss;\r\n\r\nconst gridCss = \":host{padding-left:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));margin-left:auto;margin-right:auto;display:block;-ms-flex:1;flex:1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px))}}@media (min-width: 576px){:host{padding-left:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px))}}}@media (min-width: 768px){:host{padding-left:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px))}}}@media (min-width: 992px){:host{padding-left:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px))}}}@media (min-width: 1200px){:host{padding-left:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px))}}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.grid-fixed){width:var(--ion-grid-width-xs, var(--ion-grid-width, 100%));max-width:100%}@media (min-width: 576px){:host(.grid-fixed){width:var(--ion-grid-width-sm, var(--ion-grid-width, 540px))}}@media (min-width: 768px){:host(.grid-fixed){width:var(--ion-grid-width-md, var(--ion-grid-width, 720px))}}@media (min-width: 992px){:host(.grid-fixed){width:var(--ion-grid-width-lg, var(--ion-grid-width, 960px))}}@media (min-width: 1200px){:host(.grid-fixed){width:var(--ion-grid-width-xl, var(--ion-grid-width, 1140px))}}:host(.ion-no-padding){--ion-grid-column-padding:0;--ion-grid-column-padding-xs:0;--ion-grid-column-padding-sm:0;--ion-grid-column-padding-md:0;--ion-grid-column-padding-lg:0;--ion-grid-column-padding-xl:0}\";\r\n\r\nconst Grid = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * If `true`, the grid will have a fixed width based on the screen size.\r\n         */\r\n        this.fixed = false;\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { class: {\r\n                [mode]: true,\r\n                'grid-fixed': this.fixed\r\n            } }, h(\"slot\", null)));\r\n    }\r\n};\r\nGrid.style = gridCss;\r\n\r\nconst rowCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}\";\r\n\r\nconst Row = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\r\n    }\r\n};\r\nRow.style = rowCss;\r\n\r\nexport { Col as ion_col, Grid as ion_grid, Row as ion_row };\r\n"]}