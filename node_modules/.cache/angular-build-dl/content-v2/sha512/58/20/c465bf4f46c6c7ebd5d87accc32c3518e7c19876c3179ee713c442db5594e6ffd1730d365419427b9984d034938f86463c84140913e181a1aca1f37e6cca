{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/focus-visible-15ada7f7.js"],"names":["ION_FOCUSED","ION_FOCUSABLE","FOCUS_KEYS","startFocusVisible","currentFocus","keyboardMode","doc","document","setFocus","elements","forEach","el","classList","remove","add","pointerDown","addEventListener","ev","includes","key","composedPath","toFocus","filter","contains","activeElement","body"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAMA,WAAW,GAAG,aAApB;AACA,UAAMC,aAAa,GAAG,eAAtB;AACA,UAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,WAAR,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,GAAxC,EAA6C,OAA7C,EAAsD,OAAtD,EAA+D,WAA/D,EAA4E,YAA5E,EAA0F,SAA1F,CAAnB;;AACA,UAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,YAAIC,YAAY,GAAG,EAAnB;AACA,YAAIC,YAAY,GAAG,IAAnB;AACA,YAAMC,GAAG,GAAGC,QAAZ;;AACA,YAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AAC3BL,sBAAY,CAACM,OAAb,CAAqB,UAAAC,EAAE;AAAA,mBAAIA,EAAE,CAACC,SAAH,CAAaC,MAAb,CAAoBb,WAApB,CAAJ;AAAA,WAAvB;AACAS,kBAAQ,CAACC,OAAT,CAAiB,UAAAC,EAAE;AAAA,mBAAIA,EAAE,CAACC,SAAH,CAAaE,GAAb,CAAiBd,WAAjB,CAAJ;AAAA,WAAnB;AACAI,sBAAY,GAAGK,QAAf;AACH,SAJD;;AAKA,YAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBV,sBAAY,GAAG,KAAf;AACAG,kBAAQ,CAAC,EAAD,CAAR;AACH,SAHD;;AAIAF,WAAG,CAACU,gBAAJ,CAAqB,SAArB,EAAgC,UAAAC,EAAE,EAAI;AAClCZ,sBAAY,GAAGH,UAAU,CAACgB,QAAX,CAAoBD,EAAE,CAACE,GAAvB,CAAf;;AACA,cAAI,CAACd,YAAL,EAAmB;AACfG,oBAAQ,CAAC,EAAD,CAAR;AACH;AACJ,SALD;AAMAF,WAAG,CAACU,gBAAJ,CAAqB,SAArB,EAAgC,UAAAC,EAAE,EAAI;AAClC,cAAIZ,YAAY,IAAIY,EAAE,CAACG,YAAvB,EAAqC;AACjC,gBAAMC,OAAO,GAAGJ,EAAE,CAACG,YAAH,GAAkBE,MAAlB,CAAyB,UAACX,EAAD,EAAQ;AAC7C,kBAAIA,EAAE,CAACC,SAAP,EAAkB;AACd,uBAAOD,EAAE,CAACC,SAAH,CAAaW,QAAb,CAAsBtB,aAAtB,CAAP;AACH;;AACD,qBAAO,KAAP;AACH,aALe,CAAhB;AAMAO,oBAAQ,CAACa,OAAD,CAAR;AACH;AACJ,SAVD;AAWAf,WAAG,CAACU,gBAAJ,CAAqB,UAArB,EAAiC,YAAM;AACnC,cAAIV,GAAG,CAACkB,aAAJ,KAAsBlB,GAAG,CAACmB,IAA9B,EAAoC;AAChCjB,oBAAQ,CAAC,EAAD,CAAR;AACH;AACJ,SAJD;AAKAF,WAAG,CAACU,gBAAJ,CAAqB,YAArB,EAAmCD,WAAnC;AACAT,WAAG,CAACU,gBAAJ,CAAqB,WAArB,EAAkCD,WAAlC;AACH,OArCD","file":"focus-visible-15ada7f7-js-es5.js","sourcesContent":["const ION_FOCUSED = 'ion-focused';\r\nconst ION_FOCUSABLE = 'ion-focusable';\r\nconst FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\r\nconst startFocusVisible = () => {\r\n    let currentFocus = [];\r\n    let keyboardMode = true;\r\n    const doc = document;\r\n    const setFocus = (elements) => {\r\n        currentFocus.forEach(el => el.classList.remove(ION_FOCUSED));\r\n        elements.forEach(el => el.classList.add(ION_FOCUSED));\r\n        currentFocus = elements;\r\n    };\r\n    const pointerDown = () => {\r\n        keyboardMode = false;\r\n        setFocus([]);\r\n    };\r\n    doc.addEventListener('keydown', ev => {\r\n        keyboardMode = FOCUS_KEYS.includes(ev.key);\r\n        if (!keyboardMode) {\r\n            setFocus([]);\r\n        }\r\n    });\r\n    doc.addEventListener('focusin', ev => {\r\n        if (keyboardMode && ev.composedPath) {\r\n            const toFocus = ev.composedPath().filter((el) => {\r\n                if (el.classList) {\r\n                    return el.classList.contains(ION_FOCUSABLE);\r\n                }\r\n                return false;\r\n            });\r\n            setFocus(toFocus);\r\n        }\r\n    });\r\n    doc.addEventListener('focusout', () => {\r\n        if (doc.activeElement === doc.body) {\r\n            setFocus([]);\r\n        }\r\n    });\r\n    doc.addEventListener('touchstart', pointerDown);\r\n    doc.addEventListener('mousedown', pointerDown);\r\n};\r\n\r\nexport { startFocusVisible };\r\n"]}